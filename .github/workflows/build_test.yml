name: Build & Test
on: [push, pull_request]
env:
  PLZ_ARGS: "-p --profile ci"
jobs:
  alpine:
    runs-on: ubuntu-latest
    container:
      image: thoughtmachine/please_alpine:20220803
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
          cache: true
      - name: Cache third_party
        uses: actions/cache@v3
        with:
          path: .plz-cache/third_party/go
          key: go-alpine-2-${{ hashFiles('third_party/go/BUILD', 'tools/images/alpine/Dockerfile') }}
          restore-keys: go-alpine-2-
      - name: Mark Git directory
        run: git config --system --add safe.directory "$GITHUB_WORKSPACE"
      - name: Bootstrap & Build
        run: ./bootstrap.sh --test_results_file plz-out/results/please/test_results.xml
        env:
          PLZ_ARGS: "-p --profile ci --profile alpine --exclude no-musl"
      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: plz-out/log
          retention-days: 7
  ubuntu:
    runs-on: ubuntu-latest
    container:
      image: thoughtmachine/please_ubuntu:20220803
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
          cache: true
      - name: Cache third_party
        uses: actions/cache@v3
        with:
          path: .plz-cache/third_party/go
          key: go-ubuntu-2-${{ hashFiles('third_party/go/BUILD', 'tools/images/ubuntu/Dockerfile') }}
          restore-keys: go-ubuntu-2-
      - name: Bootstrap & Build
        run: ./bootstrap.sh
      - name: No plugins
        run: plz-out/bin/src/please build //package:installed_files && ./test.sh --profile noplugins --test_results_file plz-out/results/please/no_plugin.xml
      - name: Package
        run: plz-out/bin/src/please build //package:signer //tools/misc:gen_release //docs:tarball //docs:deep-tarball //tools/performance:all -p
      - name: FreeBSD cross-compile
        run: plz-out/bin/src/please build --arch freebsd_amd64 //package:release_files
      # TODO(peterebden): Persist artifacts to be retrieved later for release
      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: plz-out/log
          retention-days: 7
  ubuntu_alt:
    runs-on: ubuntu-latest
    container:
      image: thoughtmachine/please_ubuntu_alt:20220803
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
          cache: true
      - name: Cache third_party
        uses: actions/cache@v3
        with:
          path: .plz-cache/third_party/go
          key: go-ubuntu-alt-2-${{ hashFiles('third_party/go/BUILD', 'tools/images/ubuntu_alt/Dockerfile') }}
          restore-keys: go-ubuntu-alt-2-
      - name: Bootstrap & Build
        run: ./bootstrap.sh
      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: plz-out/log
          retention-days: 7
  darwin:
    runs-on: macos-latest
    needs: [ubuntu, ubuntu_alt, alpine]  # Doesn't really need them but no point doing the expensive macos run if the linux ones fail
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
          cache: true
      - name: Cache third_party
        uses: actions/cache@v3
        with:
          path: .plz-cache/third_party/go
          key: go-darwin-2-${{ hashFiles('third_party/go/BUILD') }}
          restore-keys: go-darwin-2-
      - name: Bootstrap & Build
        run: ./bootstrap.sh
      - name: Package
        run: plz-out/bin/src/please build //package:release_files
      - name: Cross-compile arm64
        run: plz-out/bin/src/please build  --arch darwin_arm64 -o go.cgoenabled:1 -o go.cgocctool:clang -o "go.cflags:-target arm64-apple-macos11" //package:release_files
      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: plz-out/log
          retention-days: 7
