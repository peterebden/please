// Defines messages for internal cluster communication.

syntax = "proto3";

import "src/remote/proto/fs.proto";

package cluster;

service Elan {
    // Registers the current node on the cluster.
    rpc Register(RegisterRequest) returns (RegisterResponse);
}

message RegisterRequest {
    // Configuration that the joining server claims.
    fs.Node node = 1;
}

message RegisterResponse {
    // True if the request to join has been accepted and the caller is now part of the cluster.
    // The caller must accept the returned configuration as truth.
    bool accepted = 1;
    // Any message pertaining to acceptance / rejection.
    string msg = 2;
    // The state of all the nodes in the cluster, including the caller.
    repeated fs.Node nodes = 3;
}

message Config {
    // Configuration that each node serialises in order to restore itself after startup.

    // Details of this node
    fs.Node this_node = 1;
    // All known other nodes
    repeated fs.Node nodes = 2;
    // True if this node has previously completed initialisation
    bool initialised = 3;
}
