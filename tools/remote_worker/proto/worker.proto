// Defines messages relating to communication between the master & worker.
// This isn't quite the same as the main proto; among other things the
// relationship is reversed (i.e. the client sends a request to a master, but it's
// a response that's sent to the worker). This is all internal implementation
// detail though, the rest of Please knows nothing of it.

syntax = "proto3";

import "src/remote/proto/remote.proto";

service RemoteMaster {
  // Communication between the master & worker. The workers connect as the client
  // (since they are ephemeral and the master has a fixed location) and the master
  // submits jobs to them via this stream.
  rpc Work(stream WorkRequest) returns (stream WorkResponse);
}

message WorkRequest {
  // A "friendly" name for this worker.
  string name = 1;
  // Sent as a response to completed tasks.
  remote.RemoteTaskResponse response = 2;
}

message WorkResponse {
  // Sent when the server is shutting down.
  bool shutdown = 1;
  // Sent when remote work is dispatched to this worker.
  remote.RemoteTaskRequest request = 2;
}
